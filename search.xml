<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>大模型应用平台</title>
    <url>/2025/02/21/ai-res/</url>
    <content><![CDATA[<p>……</p>
<span id="more"></span>

<h1 id="基于网页的问答平台"><a href="#基于网页的问答平台" class="headerlink" title="基于网页的问答平台"></a>基于网页的问答平台</h1><ol>
<li><p><strong>阿里千问</strong> <a href="https://chat.qwenlm.ai/">链接</a>，支持Qwen等模型，支持Artifacts、Web Search、Image Generation、Video Generation等功能。</p>
</li>
<li><p><strong>阿里通义</strong> <a href="https://tongyi.aliyun.com/">链接</a>，支持Qwen等模型，支持代码模式、深度搜索、PPT创作、指令中心等功能。</p>
</li>
<li><p><strong>腾讯元宝</strong> <a href="https://yuanbao.tencent.com/">链接</a>，支持Hunyuan、DeepSeek等模型，支持深度思考、联网搜索等功能。</p>
</li>
<li><p><strong>华为小艺</strong> <a href="https://xiaoyi.huawei.com/chat/">链接</a>，支持DeepSeek等模型，支持深度思考等功能。</p>
</li>
<li><p><strong>知乎直答</strong> <a href="https://zhida.zhihu.com/">链接</a>，支持DeepSeek等模型，支持深度思考等功能，可以有效搜索知乎内容！！！</p>
</li>
<li><p><strong>火山方舟</strong> <a href="https://www.volcengine.com/experience/ark">链接</a>，支持DeepSeek等模型，支持深度思考、联网搜索等功能。</p>
</li>
<li><p><strong>DeepSeek官方</strong> <a href="https://chat.deepseek.com/">链接</a>，支持DeepSeek等模型，支持深度思考、联网搜索等功能，目前使用人数较多，经常遇到“服务器繁忙，请稍后再试。”的情况。</p>
</li>
<li><p><strong>阶跃星辰跃问</strong> <a href="https://yuewen.cn/chats">链接</a>，支持Step-2、DeepSeek等模型，支持深度思考、联网搜索等功能。</p>
</li>
</ol>
<p>GPT、Claude、Gemini、Grok等模型与应用平台不再列举。</p>
<h1 id="云平台"><a href="#云平台" class="headerlink" title="云平台"></a>云平台</h1><ol>
<li><p><strong>阿里云百炼</strong> <a href="https://www.aliyun.com/product/bailian#/home">链接</a>，支持Qwen、DeepSeek等模型的API、部署、训练和开发。</p>
</li>
<li><p><strong>华为ModelArts</strong> <a href="https://www.huaweicloud.com/product/modelarts/studio.html">链接</a>，支持Qwen、DeepSeek等模型的API、部署、训练和开发。</p>
</li>
<li><p><strong>腾讯混元</strong> <a href="https://cloud.tencent.com/product/hunyuan">链接</a>，支持Hunyuan等模型的接入，可以使用混元生图生成图片。</p>
</li>
<li><p><strong>腾讯云TI平台</strong> <a href="https://cloud.tencent.com/product/ti">链接</a>，支持Hunyuan、DeepSeek等模型的API、部署、训练和开发。</p>
</li>
<li><p><strong>Gitee AI平台</strong> <a href="https://ai.gitee.com/">链接</a>，支持Qwen、DeepSeek等模型的API、微调等功能，同时类似Hugging Face提供了一些模型和数据集。</p>
</li>
<li><p><strong>有道智云</strong> <a href="https://ai.youdao.com/">链接</a>，提供支持翻译功能的API，支持DeepSeek等模型。</p>
</li>
<li><p><strong>火山方舟</strong> <a href="https://www.volcengine.com/product/ark">链接</a>，支持Doubao、DeepSeek等模型的API、应用、训练和精调，支持Prompt生成、调优和管理。</p>
</li>
</ol>
<h1 id="IDE和Extensions"><a href="#IDE和Extensions" class="headerlink" title="IDE和Extensions"></a>IDE和Extensions</h1><ol>
<li><p><strong>Cursor</strong> <a href="https://www.cursor.com/">链接</a>，AI code IDE，支持大部分模型，支持自定义模型。</p>
</li>
<li><p><strong>Cline</strong> <a href="https://github.com/cline/cline">链接</a>，AI code插件，支持大部分模型，支持自定义模型，可以自动进行代码读取、编辑、修改和编译等。我使用claude-3-5-sonnet测试修改了259行代码，花费0.8美元，开销较大。</p>
</li>
<li><p><strong>Continue</strong> <a href="https://github.com/continuedev/continue">链接</a>，AI code插件，支持大部分模型。</p>
</li>
<li><p><strong>Trae</strong> <a href="https://www.trae.ai/">链接</a>，AI code IDE，字节跳动发布的，支持claude等模型。</p>
</li>
<li><p><strong>Marscode</strong> <a href="https://www.marscode.cn/">链接</a>，AI code IDE和插件，支持Doubao等模型。</p>
</li>
<li><p><strong>通义灵码</strong> <a href="https://lingma.aliyun.com/">链接</a>，AI code插件，阿里发布的，支持Qwen等模型。</p>
</li>
<li><p><strong>Github Copilot</strong> <a href="https://github.com/features/copilot">链接</a>，AI code插件，支持一部分模型，每月订阅价10美元，可以补全，可以chat，用起来不错。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>LLM</category>
      </categories>
      <tags>
        <tag>LLM</tag>
      </tags>
  </entry>
  <entry>
    <title>FlacIO论文浅读</title>
    <url>/2025/02/26/flacio/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="72259fa86e51f8645ada04ea985de83b9bc96aa5bd0923e42015b1949cf1dd0d">104ae13d96f2c4fd837e6456c370871c094641f3e69c8d9758a33f54f56441d19de8e4686da22a7b38760deb639d52fc068b048595f882618f4b755260482598</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Paper</category>
      </categories>
      <tags>
        <tag>Container</tag>
        <tag>Paper</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo和Github Pages搭建博客</title>
    <url>/2025/02/19/hexo-install/</url>
    <content><![CDATA[<p>……</p>
<span id="more"></span>

<h1 id="Hexo安装和配置"><a href="#Hexo安装和配置" class="headerlink" title="Hexo安装和配置"></a>Hexo安装和配置</h1><p>首先安装nodejs</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://deb.nodesource.com/setup_20.x | <span class="built_in">sudo</span> bash -</span><br><span class="line"><span class="built_in">sudo</span> apt-get install -y nodejs</span><br></pre></td></tr></table></figure>

<p>安装hexo：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装hexo</span></span><br><span class="line"><span class="built_in">sudo</span> npm install -g hexo</span><br></pre></td></tr></table></figure>

<h2 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h2><p>建立一个文件夹，然后初始化hexo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> hexo-site &amp;&amp; <span class="built_in">cd</span> hexo-site</span><br><span class="line">hexo init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装相关插件</span></span><br><span class="line"><span class="built_in">sudo</span> npm install hexo-word-counter hexo-blog-encrypt hexo-filter-mathjax hexo-deployer-git hexo-generator-searchdb hexo-leancloud-counter-security --save</span><br><span class="line"><span class="comment"># sudo npm install --save</span></span><br><span class="line"></span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo server -p 23817</span><br></pre></td></tr></table></figure>

<p>可以修改<code>_config.yml</code>文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/xxxx/xxxx.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>

<p>然后部署到github</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>可以更换主题，例如<a href="https://github.com/next-theme/hexo-theme-next"><code>hexo-theme-next</code></a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在hexo-site目录下</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p>更改<code>hexo-site/_config.yml</code>文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>

<p>然后重新生成和部署</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<h2 id="增加菜单栏"><a href="#增加菜单栏" class="headerlink" title="增加菜单栏"></a>增加菜单栏</h2><p>可以继续更改<code>hexo-site/themes/next/_config.yml</code>文件，增加菜单栏</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>

<p>然后需要生成相关page</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;tags&quot;</span></span><br><span class="line">hexo new page <span class="string">&quot;categories&quot;</span></span><br><span class="line">hexo new page <span class="string">&quot;archives&quot;</span></span><br><span class="line">hexo new page <span class="string">&quot;about&quot;</span></span><br></pre></td></tr></table></figure>

<p>在相应的<code>hexo-site/source/tags/index.md</code>文件中添加</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Tags</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2025-02-19 19:17:35</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<h2 id="增加文章"><a href="#增加文章" class="headerlink" title="增加文章"></a>增加文章</h2><p>也可以生成post</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;Hello World&quot;</span></span><br></pre></td></tr></table></figure>
<p>并在<code>hexo-site/source/_posts/</code>目录下编辑相关文件。</p>
<h2 id="主页显示摘要"><a href="#主页显示摘要" class="headerlink" title="主页显示摘要"></a>主页显示摘要</h2><p>文章在主页显示摘要，修改<code>hexo-site/themes/next/_config.yml</code>文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use `description` in front-matter to specify post excerpt.</span></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read more button</span></span><br><span class="line"><span class="comment"># If true, the read more button will be displayed in excerpt section.</span></span><br><span class="line"><span class="attr">read_more_btn:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>并在文章中使用<code>&lt;!-- more --&gt;</code>来分割文章。</p>
<h2 id="字数和阅读时间统计"><a href="#字数和阅读时间统计" class="headerlink" title="字数和阅读时间统计"></a>字数和阅读时间统计</h2><p>增加文章字数和阅读时间统计，修改<code>hexo-site/themes/next/_config.yml</code>文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需要安装hexo-word-counter</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h2 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h2><p>文章加密，修改<code>hexo-site/themes/next/_config.yml</code>文件，可以查看这篇文章<a href="https://www.itfanr.cc/2021/04/16/hexo-blog-article-encryption/">hexo-blog-encrypt</a>。</p>
<h2 id="其他相关配置"><a href="#其他相关配置" class="headerlink" title="其他相关配置"></a>其他相关配置</h2><p>可以继续更改<code>hexo-site/_config.yml</code>文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改title</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="comment"># 修改language</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="comment"># 修改url</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://example.com</span></span><br></pre></td></tr></table></figure>

<p>可以继续参考这篇文章<a href="https://theme-next.js.org/docs/getting-started/">hexo next配置</a>和这篇文章<a href="https://blog.rexking6.top/2021/07/10/hexo%E5%8D%87%E7%BA%A7/">blog.rexking6</a>，修改<code>hexo-site/themes/next/_config.yml</code>文件相关配置。</p>
<p>其中增加数学公式支持，修改<code>hexo-site/themes/next/_config.yml</code>文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 需要安装hexo-filter-mathjax</span></span><br><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: none | ams | all</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="string">ams</span></span><br></pre></td></tr></table></figure>

<h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><p>可以使用阿里云OSS和<a href="https://github.com/Molunerfinn/PicGo">PicGO</a>搭建图床。</p>
<p>以下是图床图片测试<br><img data-src="https://zzh-blog-data.oss-cn-hangzhou.aliyuncs.com/img/20250220133221268.png" alt="cat gen by AI"></p>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>读书笔记-史记（一）</title>
    <url>/2025/02/23/shiji-1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="0e1be72316c0d41cbf767f9fb997ce1c28451938518aa8ae5998954541747aa3">104ae13d96f2c4fd837e6456c370871ce08885437c1fd004c7382b0d91b37376093d725d5a609c2e583432a9c6e795cbea3d92be869d82dd24a3345e99059aa81f84f4cfbbe3f58d70f4c084450ca56449daafbdb856cffee5d1fdb784164339aabc5a84c99786d6ebb159c19fdf5b30472a2a411c9aa3c709a3e9a5bc7d297d5a961959aa9e320e0ac2242519e03d85e1c8c8bd267ab3e237adb4a9fe0f3a78d6c19ffdf9f20dffcc863badfaf8bd373a14d1ffb1330c4280feee29b2f944e65f6771cb825b34f4a647716548026bf83010d6c254d753c391279d7fd029b65a98d4f0ec8de71e20ab0f6c58074f8b86fca2441fdc99dbf374daca460897db9c78b2e8027525ae348db648a77bc4c469b3cd40fe73f9bd41d26ecd7a27a30b25b0f69bb708c18b36322a7c742815b2b4c64f7f6e15d72504fac6c7d9b4666f7d9c163354038a9fd860117f01b1ab32296dd81c75755f1845cc52b833e2d762a6063181454645920aff54eee71cc91838fd87aba72ea7af68e5e5abe92c7fd1b12c6a7dfd37de273fc5e2da3be7b728295af4a17754e00f10cca39c2fa3b6513c48416734faa3fddaa3cc94b3e0d259a3ecd0b6f8b36c94eac8fff6595f6dc5358de5cddb44956d1e312a32333133000349d0a504720981ff05f839bd537eec5d5bdd9460f6fb8ccc68cd261a037273ed28c6d9e483e09783ea633a5b840e90a6853398fbcacbed0f6683e63546abb809dbf25a7a8817cbf9704380f858b728cbf09ce035757a1c9f42dca1746556318e7faaca5de3191996870282c23db6e91a27f151ed17478ecc7402fef2e81c635e7456fc3e6a4aa2d4ec13b52f38c7f0ba33ba39cb204e68fc7c83c738a5f422fbd4bc960e3837be26b5b4b802f40d58577f635c8f5a37645b4277d528d1c804c79faed3c8ae48acbf7b14c0da257ee44b0ffe9ec6c7975e451070fc8d8e79e3f19611f4ae37f9f25b11e6b0e76579f830c7993e1e6962115f20bb5bca4761787e13762e23e7041054b279796d96446d2e045f481960efb9993de626f9b01d56557bd5315a81c67751c4185da814d873b260c69f99edfcf0a61be8b3006fbcbecb7ea416b14ef72d7608cbc981104ecbc3ebec647761a10330a07ac117262cdc47589c1e3cdc6a2c0fb1c15cdd35bab62c5d6f84d0a2740f54e1403e6f9f7b644479e38e540d1bacc10c668332d69391442f7168bd3d79df72284246b56c7530f249a6eac5ad5d99a6786970380ec726d5a80a86870219cfd614c81ad4f26ec8c30af320dd48de580c5ed0748950f46a50c8bf61b3dcdb52b127f943625f8bcbf44ca2460bfe2a8f9d89afcfff3c8e211d3b0eb9299351a5e3a4417c2da7a1d963c9ce7ec99dda0776725759e274d02865620739f9ccef40db18509d5945034c8f267c70fe05f575b7a8cafe3442c55b5ec0a1589bec30f6c5abcf14859d4d1960b08b35ba8bedd14e566f70fefaa38097f3e6f76004fe552703faaa2d361f7a50aab9cec1f710ed765a2a5086104a5e14099e76720a520a23353a79f552baf4a40067d2087e4f4e77fb01ce75a68411bfdd0720c50bd50ec1a81a3f74f55bd5967bec5519a2fc1d2820a51cc564d632e639a918f523f05c6ded947561a4516ced4d2039b41c57ac7dcd783c6015dfc56caf75f48f4000222aca1a33a37bb89c8e724ac7c235d2bd612f8d9689649462fd745f3538e4af7c2e1bc62fe99d15092707ad14a3e92f1145661e4a3ff2700b59bd4797f9db00d7af7dfa969ac9a5bb400b1206202270098e2ac6ec1d5765a4098c392f0121144add0c82485be8d1bde92b510b4833640d90a94d59d5ec7d50e047a315db80758ed0145b607396731c8d5b3f6de4992506eac7d2ed6fcd3231dc676b986ae336ea312be5575cd11c7a08aca69f09827554cab3afa652cc9984e0c7034e3f2de7a05e722e1fc3b4b9193a5948e42ee4ed81217af1d43cf8f263d79f306fbb4fc9afcdc8d9ebd4d0a45285541d11d00cdc211da96bb3ef13fc7d699d480b5205010d3c73f53c4b97637465becd9240353f2c2d3f1a0e4479d96adc368ba95831160d67d0f8488890a6c4a2ebe62831243841769e519845d1077d60cc5b88dca513dfdbc12185ea325ae234c3e20cefb1c1cdb39212c77c4cb9f9a5953c304664d8d6d11fe58923dd85690ee5533223b29d174c92993d84b5bc9e45d6ae4eac64cb1aee09c2dc952ec47460baaaad19ec32b3bc64a9e36b011ce2d120b481418893f409bedae2480ff90a481b1a44499116f95596400f9bd9da729498a38f46bb8b42dfee67c027d80a08d13a4aa2928aa0a3646bc97cb7d115a8ff8d83d7c4d5bc4d2e0160e0da09282c4eb97819af630c687204a370398eef9d57814d7793ccaa958ef4c4534b38b9649008893501e1d57441ee33011341ff47fabf9a5098faf82a739ca2e39fd5fce5d7202ead9b25707fb71099492f8b9bb83b4db35058d949de2e179b6e0af6f822872a1eb5e7d5047db6409e5b8e7d2da3a326c449a0ff3ef0be506228dbcd01c402ceea32fa36c3c2b9d2b8b986d31927ecb32724f270b0f0b72382cb779f2c4e0331736498af087c9ebef3150829bf62e41e87feda24b7f461ed8b4f9d36bfba924e07b64fb36e464384e520cbf131cf942de99fba9bde87ab9317cc37a25708f59e68bce5ba7c1cb1f43fe32efa119c4099723c1e5ab1c9230580d8d28bc6c79fa44b40b1b67261605124ea03b002e0a0b541fe3df229eaf91e1bac56f0252fb4935c8fe5146486a50cf0ea5011b3d0e16bd90f7abf8d80e082ef61de21bf0c19ac0c5086a63153ccf97cda65131fbdc9b6b3015dc87a7808e22b72ba204c6455abca1f1faf3841b6fb44cbe68c6cacf000de21744e4622488524f0580134c72e1d35bbd53f3f44ee9b4bca551578342681a3e8a88191e5c577879de2fe90d47239db5e9ad5c6f42dfc282f503b9e7149fe942d0fa83b4952264b75f09b9a9079a27c7ea19c0a8a4721f8f3eabb67b50747a4e936f2e53bef9d268590e94025cfb96014df58521ddf6f6010556076e45bd936272fe8092f42558a6b11ac0607af3f282cbd3b579e66f546bcaeeffaa9d9c1f424d9c6c60a3aa2d45cefb6756b04f0a9777e767c486371ac3e32605e11389068b354d047ea4b24deb00ef73d09f52825a584df74bf3c49a7db4ad86cf032cde0be93fd4a955d4e520ae57ddf5e59c078e00d86c6dd4602829b2abcb9c9ae1bdbcb34755c5a89f000c847aeef515a6a51c44f1032a296ee6346dc8c76f1159a88b264a9d19efdb115ffea1979427627cee25833f1328ba9675ab5fe319c8bce7317b26826317d179627a9998662741bdc2ddb1125964a60aed9032de60d7293085bc7eaf03f328dc663957542a5a3f2129c3d0f0b52a4d6f3870b7201342b6b119e24759f6da2c1421c49c97cb2fabfb6588669049c2bdefb60a848828219f14a8c514a327c2bf44540691ed7b03a70fbcd29ade2cf6f8d9beaec3e5f8f568506e3fdfc6c5d90cb3e1590706cbc92b3183adbf6482be3f101b5c1b26a2bb92572954b958042144044bdfe2b820498b275c3df1993df1c355061147a87659709802e72f8899971ea3bb7a911ed4ccef104e12fef42c10b5dbe465f3c88c8a30cadceea67239d109eb1ef2fe7d577ad33471261a84081372e325a9835c48ae2cbfbe209c2a01a44d24bd9add25861b8eb5b76254040750dbb3de8669ae487c1708f983f8557d3a88a2f3c43214fc1cbf6cdb45b09a86c814c325f494fddd70f6f13077aa864ff552d53f2b8537072fb9191886237cd2f846c16e89aa46d2ea8a0a0e523f162cfde917fb955b075b37ed4daa537aa40a2bf0750ce25e25dc89bdd451f29986b03c826435d4e694c5a535e000398bf8628e32c1d7dc2280cba58a299f3541d2e36e9af99c103494447f8052377dd4bde54bbccb137fa535a3e32eed41b9992077006de66ccccfd8865ad1aafc186dd34c0d342760f74d2d9e24f957b1226cb190b0705001633c23eb430e12eab62066d9d60d02adfe86531e98719303f5751fa5a9e14ce9e00217a4fd86555ff74582cde7f4701cac793e14453f3ed7f395b9a38cfe8814686e18d1d1acb0f71cbbd45ba773c55b2ec646f154dd5ed160a157d61397d65ceb964e4038101e5c88f58c7c0e8b962491f8540ebcb1be1d300196cb676df155066d13e193eb6609aa0c44bdd27c70e8b2e41fefa3410656e8734054baea11019c064b8a1aea43ca9c13d2ef3d2b2b06b97b7a0bff285d26ec36f2b55617c3c0fe7f9db86633c4d6eb0bfe709ac47f854f01b40d6563c1e85cc9f8acc00d7cd9a06f6dfccc0463e11251ce606ea31d618d7e891e4b9fac9ccc6082c0798911b3fdfcdaf8f787b115dcabd9547e83910604dbb5594e19ab856d0833d72a91e42dab8416203711bd672d175ed5cf63a059ee9f225e0bdac37456773cbcbb14d7ad0532e184e25240c019d553458ee96e1c8aa1a5b973c94aa571d110e30195cf0160b82d13523381618c2a4a625e5532f4af6f7bd0e89565821336c1cb4c13a0c42b777ef0585759d9a10cf53dd9c6b3c39ac1e1e5c3aff68594329596a2837fa133afa2f196678f2bff144293b8b87d4c6b38d0033c3c1cef20a5bbbe59140a3ce54ae0b41f9588482ed6a6aadd23ddbc800b741e26cc1db4dac2c647fb3e2f8feb99cf0a9b0160112c73b9387217f04869e2606ade2e140439e5e0d6066e2a3abcba5b9400d58efb82f89580a341d3d07beb160827ecd394ae7f235c95e52a8a68d02d2344b895694c8f2b2e098280778a11269d8335525e62186a2e27d56eb0f4ed812e60f99d3aaf289a24224c15991c14252fd49b33d59050c2031bf432e80e8578e4d0b5d8cf422efe5ce23834a9a9184c12d47ab506ba8c2a2071cd5b5d014199bdfcde38d3911eca74bf0e2cf56ced5ea66397c38478c3d544fa23e584f6be0319f04bade66c5415d922f5f75e839a5193c02b978e7a5ab2385098f715ae6cfb35e109116bbf867ac281940147ca5a9944893c80de49195b1a384f89209e5eb318fe8be2374f7d75352475bea9da129013e86f0ea9dd0cb33718bdf9ceae5224755e25445cee43b41a320cf6e276036568a2ff907205ab1ba40a9f4e319bef29ddaa29297116cd76945f3c36fcd62cb88ef99b41c47f8d6217fa0ab5cabd01c287387530e71ba86ad9c20d16753051b81a61b906e5afebd3812e99b4b4d2b1869cd3782c435bcdddd7ec2bc67e642e82b767330f48a93ebf2859865c2ce56792ce1ef910cb786d287d3fbf7594b0a5d092319f16edc8ddb33e31b795340bf462bdec3f0e77b1cef677cb954a3c5d5cd0bc011375bff6a4033a25304a9e6e8fd1f66c98860de45a7eb4c09a8cf77f05302184a235f591974df842d0601661252ac808c4c66626c037bad3a9d93ba4317f3db703151e64a83482f682011d1bb33a74b8d3cd455d64afb04f3b3744cee70d9adc9362aa43694dbbef95989eadbf54818d2fbb2469c8d048d13e6936fc8017dba42ac5091b6abe372345938f8f7659ca4479b6c99b7d34944541dba5a762eaa9d0007775072afe5c8d3a034885b7f2fa92ca7e6297c04313215f53bdaedf18a2d719a856739d670ec03866a3d69d1496f9e1ad0ca2efa1c0607632669970a9919104231dd7b40913d6d04fca280ab59dfd8cbd928cb41112cb9043bda65e7fb1a6fe0f4c0e0c2bae2a69510726403b3639ba7adee9662415b9fb46981bf32ff026d403e541d8ce6201eed22ec83b8ce3a93a26bd5f80a1e7ad88681d89a990409be264863b29d37b0bf62df18c9be0f3f733c29bc698b64d2226642d295ccedf354892ca8f7995333df0ae6bbe4710087e5366bb07a12f50c8002969c57406e073d140bede2f54dedb95f6cf5b40149896011ce4b1bdbb17983c3b6e49d5317ef80bd52bf529ed515b4ac78d8cec8d49794fe4ac6690003b1570eb443a8c6148751b4d01911932fcda1aaa2418bcc82292dd633e4e759b1564b89c5149a4b21123423dff52c6e867ed70a91b1a11ad0715e475b3206a593c1e0ee821aa6bd0df1f4ba41ab7ba06fbc7993e0ab2cfc2163c5051eeda9fbac29e9ede8c06476448ef89b0bc73d9c291430189bd0e4487374243a6cd211061d2a0db4b277b54b2b431149d96c5e462d50f5b4382d224b9a955c64fe821330450aab7aeabe439ba53a542de1bfec9253fb1e8111bccc7c057c472cb0b8a1202919f25a390993f70ff512ff8b27afa090c371c3d5a5c04b93f695869479e91551a4272bb7c25ddbf6e3d43d5230c6275a758f1c7b6c8619c06cee60d707f3286a3a4d65ff00245d3942bcc0eb28e0ed861eb5f03718c2943b5a1607f73daecef24e092f4d2552d453af5868066c434f3c196f6033823b24f45594fc0db85314707511c6092aa8d30e881bff7d4121ad74fc0c7e7c0db8beba05bfa85def7032dbdb0a9e9dba704e2adadbba2a046a72fcc05823cebb75dc4b8314cac70be6fc45ae005bbf16baa6932ef8d6c4a3d433359e6b1d3c22c738d4dbf6fa1c2b3e262127da953b542a9697a56f8df92317fef7b448ee07de10e75235957aae39d5fc371942168ffaf5b2b64146e4d40acbf8bdc1f0a74527becdab0711ea9b6f0d2b2d525d852ec0468268740b8c52928287897407f15d3a2b8ea6747d3c87d5b1ef808e498895b6589d1e04472e03bce1e8381284ac89902ebd13891688121539d341ffed07f2b6572ac6474f07fd66743a732a02c1a115fdbe6ac506d98a735fb133addf98a663840f0cf28112367fc04b2b83699ff1fe34c56393ff3240d1efd11324393b36affb598cc77a8b9499e4ca0a5ea79b32428c6db92ea545986f8f687ea75a810418485e52fceac504340ed59ef2092c03e468a20ca0edd47cec41ce322fc544940dce9687c2394078b8310e196b9831365fc340d1dbf1f98e3aa56e889d4d96b21bf473a98ba9ffe78e1294cd6d280ade57f6d26d5810face0a3abfcfe9752cdab04b6b2116cec72fdcf9c15215ac6840243e25e89881f35fa343849c537ef65ed2b73b4430514881bef1566d6365116a5bb17b565eff9540243b9e54abc84a29f93840e8c4f38338551a9ce15f39e7e49f03a6578f8e905f028604746d6afa79d57bfb420ba70930395eda501367c188fbc339203ab55b77ee277b0c1e9fe621efbfcf8926c2fc6dd13936a41855f6adc0bcf40d45239e57a11f020acb37101dd53e496476f14b78c62331d692c4e0beb074ab221cddd4721cda40038adde34cb25dd881c24ef734b4477ce77d67cf8dfe69ad84a088b3027c0f12cf9c07297c7be7450953092ef3dba225e00c7909289b12544fa27fe29d4d1c0b6b1d81321be70fe035cb9cd39ccf9fbc6685a8bed34bdeef705b51d5f4aa5df6e7f7db4b81070edc3732720453e6a7e4140b7d45e3e3ad44c1c5a3ba37999357d5264ddece147c2c6bdf3d3b8e2c379b69dd56ea267a08a2e994198a135e7d63568483e7ae8e086aa9c621d43eca2631a156cb36cb4e907daaf6c0704a1efc032c81c6bc9ae5489fb516e901ad8b35717a86d628786620e7307af322f7f6c2b7f7ca0c41c5847797ba3743f9c7aea0ea130ecc1f970a85745714821101c3b69fb149367d83e8b34c916ff29a3afa89a4c87e49e305600ec1834757c9a2cff6c8246366c54f66ded2f95f2cdbb0d72a4354e14a5e3d7713a707f2cfc9b5edce23c0aaea1cad93018468942e109b708a06f8d1783d00d113e1b8f5670f57b6ff531173214147ef313a14b8d2c7c1c040c65f6b1e663cb461552ded298e9cac668bbfb60a43349ab59c982e8d1e865cbab6332e321d7f834cedaccb40c6ccccb080a30ba41edf6a2a13d48eb26394234ceb695e733ab56db4da7de742274f0b0fac34b174e890bc106f6225addf745977398036203b3144fc6b56a9f965f465a668b73749215b7f3208d63ae389ad7470c142bfe293a70ccab4fe3e1b5ea34b27756022b5bb19082132882b532f882edc1554ecce1313bfd23ad1079fa328dfbd3749560586133d440d6f259be99df4a189cb2b477d380b45dff7fc22e0fc9b63edc8ce76a74ff12da61cc7fab6dcc7648f723f44edc6f45af3e2b16c08141a10dedc98c1e2407f31f3d0436472262d537b99b48f933d7af590ae4e82d9dc589fcf40a55cb2360e884cae1fdf6f1d3c6bd57615d78cc45848352fdea97dc15683fec4445e22f6e6652dc43c2a43968325f34f0b9c2ff5ff2b4919dcb12b3e88fbe73bdac9d942d0e2cd4a53d88fee30fcfece083eedada1d2ae499b218613084d4d31a51159b11c4107895b6d66f7a359c94edaa7755e72f62d6a164506a89c31930378363b6d8e97d2753b84328f9b78fd55e0c8d8d34c9ffad78c45f96f4895e3d8717760e91d2566fcd0cc11a5eb30ea7915248f50a13e03e9b28ff51caabc5faec534445b7cfef87f0735dbd66aa06d988b81f24abdb8585eee253698eb589d36ebdb3a279d1a396ff4f4a1619a0a98a8d1870917ecaab7a2705737b66d609da7835ace57848eb9f38944f20e89155663662e02f37410757ec6b2f1498c91c37167e4ea3f74df4f57a704a834fd2606fc49d14fbb128342c6d17832f6e61546ce0b34f684cce5e6b74b6abb64eda62790a12eef6a55b3063112eff91caa8f656c9eb18999f40148e01c1f7833936aec82245432386c9865bc948251170d370329a537bf28061747adc47c5538c8f384a62fbccc0e74ee127c0a047a36f95112987050b30945fd22ab1f7d34e2e7a753b39fd59c23fa72939dc730567264a87f6ed728cbc572924b8474056c343d2d59a91b0b207e078019307e11b4544dcd513d57a44e797f09a3e2228edc423c9c4215a91594f8d160b5f0dc9da4b2cae12260a995ed5821d3902dbcc9bafce2bdb480910fa4a2206b6443293f926d9cf3b4065611bceeb045dde850167afad4930e72d2990185f5d6cb9807e72bbd6354d7725d82a76b251a20bfcf0d9c3c8b4d9139550f5264c13609d1e53c852c60494ef62a6a08b9b421122683863e4c78571eedf1d417d143a6ad740df9069a70205fc8e0d8121e49aa967afa3e2eb6d7640a8b074ae9897c80727e070fa866b0bf48d1d155a45c9233ca63405cfc09209f0c7007d0796f9a304cdde24b0e9ea6074ae63e5a08494a77aac010be8803e051605c831c2ccba142191412ec77b160db43ad67fecd324d7061227ff73adb9d5210e6491e9a53c29c10449ac1e893476f79be33cb60297afdc0d13d9fff59c29dc0a3c45edb502527f79af6ce5d97a4bf3593ae5a3d8779393e1d5a6e5766e1f0cc7339771186e73e22fb6f5c95364294361fc57ee6f818bd7536e41922144443ab9198b4f0b442ea5bbe24f85a72f6b4594a7e8ba49b24130d77218a1fd739b2c9dff50c8a42c520c049474257ba8a5069237787ce60acef3d34676ac092c613e36ea18bf7c23e9508ab398a625fb2ec4890a9666ddef6d3ed5fd7de4b5bea462179acd417d1f9af61d812b5fa147064427ba9c961a881c7543717aa04ee12b34652037de07d2fb59ed19b3f61c632f49d932829303a863f9a3b83a64c14ea2b16bf24af86c8e619d33666cb18e7d8adb18ac4f3f2cca04840e53d67bb17f8112bb9d35cfc1a7da71c825534a3d5c4cea85d08ca4e61fefb8d24d7739ce370b1a986d5ea82c473a3ab9e6289d59c701eabba8cc69b8a221bc364cd821ab09270c0c1de634a3ec0e489dc8590ed4f0a758962b9406f53c2bcba6fe7a0427bbfb44facc5162af4c1e12c4a2ed473548609a57f90149315416a180b269ef472123e2c35738ae91ed2ab2e6de1f7d0c24221310d0ca6a32b87e82131d7b6ec32beaaf2b4db82ba0cd3b1d5c84ece72652a1eea6aac8ef289b22d8d2d4502c8f41b2914c23e336c0fb88ad6c5752dd93bd7e182b4718979589760ab8a619a7299ce377cb847b7546eb4fb1e45e1030ed82aad021249d9dc0b602efdbcd795c9623a7f4bf9791f0d0cf76ea6e332caf9d2e8650e32b6e324de56c1a18618b500654190d6c415f37258a10758efa1f574c91b37351372f92e63b0528f002ca46aa088cc4d017e6bb36cd4491f4a475afe60c894a738b7dea08a5ea24b61fa717ec234eadaf8661d0a809f3589988eb28e672c2bae9551f72fcb83948a1d4d556e026652730966c46d7d2101a87c1e3426cdb771bb96f4fa19768320c4ab3585d130b366192a5f202822b275a68dfc73b340a51eba85d4944efc22b875809250ccc18fb9ca0453cc2ed9a2be4b556e6e3a77f03db1170061cf522486b3fb652e203c881a618f0f013c5058839bf77dbdbd078541d89d9f5c7a4dcc11ef7f864733693f9a6d1e52b502584208f6e5c7aabbf1fe9fb88ac0ab005a2667d9f8144383c6063fbd4981d3829a40031f9ede40e272e2a95913728d965aff4dd8015405d227a0e3b3dfec103dcac0eb80ad7f1c43ddce939001ef7f5538aa073a858c9a33e6df6024d3cf733270b611b69076aa3cfc4ef2218a4f2d78ad258ea2c594f7acbb45affd24e884b828d8ff5cb2a4bfeb5370bff29196bdb8ba1a0bced821256770c2f2e685b956c018e13a4faa5724965ca756b25c74fbf68e0f666f7b66eb8c83ced57ac8bf3482ba59ff854d4503af198bc6527222ce1db55cdc4d838e0ba9106d2fd661e2eff384a84f30a74f68624627229999a5944a72a4fdf320a4f26da7b48d4b47a47e8e3c353e536c760ab4f9cf93bfb2b51f60fd956fc4861cbc1dbfbdb6d6d1e63c051d94047474c83dd158754df893e9f990b10682e4c5786f236d7f7f954582fc2149b41f95a86a04588f899ef648d3fcf42655ad7032654806bdc05431a34f394d403a1295f3bde87c0b16271180dd143d9bb6bba2e2985d1b7a3af796d3a7b416c7d1f7780e6d7a9c65a07e9b4844daec3b54399d69cac380c2987162bd1786d9a3089aa949fce3e0dabf0551a8d34061efc391c639e3cf835f4f8e3ebb93c6cc7431872943c54e2cbe474315a1134a5b2910954c46823b4bb618922772365df7fcb4a57f575964a5e569ad92ea1df5dc8596b3afbd9a5cb33b4e39bfdf7925ef4a1f656edd7b4b7fdfe55b1ffbb41ada5253864439198a326e1ed7d62e9f4cc6d3acc0856e53e9ece33d33576044fb86d66a6a80fdf1333904d92fc14e307637234f277881c37bc566216a32c533f078adfeedb7a3a2c241b59d85f128960e88fd9916e79300f167b7831bc5cff58c112a444ca526e1955c631cd1af23c58ab4e47359a42c3eb8522f6aa71195736addb73e6e9e3edce22b410b63298d62d6cfbd0341d9be6c11e8eea241858620f0c4d56810a8e31eac87f80fb0bc38163a490cad240c8bb3debfd9165c9d5a5eb3520c0f69bd45ffb46dc80fda547eb1b42cfd39f3cba88ae95934938fa8b532b000a6750ce3549ab1217d7344d53d3dc14f8af7b94bc2ca0bb8630e3fce31b2496a7a651f132d4344a6c8cb1deadb16321e7b97bbcd7db4d82baa7a372cf2ad9073eb864b37705f3202c55ee1fe9ad60e7f8165e3c35d45f4ed2a4bf12b7304851f2bfca8d92581ab7a495e05c548b7fbdfef1bd5325618005202076f35ef04d132b27eb94dce2b2b09e181c08ab19f5ceb84d7f18fe600dacefab3115d94bf068e92c5d5318cb1423501af4949cd0a23439487649f8a07f1ac5669f96fd61ccbd52a4cec93f37941b63fb5737b0121aa3a3d02acaa31c8760529a838ee485b52f92a2e81f0d27c402affa895999f0a1b153c5b30ebb562bf8afc35e3f2338e8e4099988661f72ed620531963a4aba3cdd9565777aa134b2d48eb4ff1708530cc99c450027a35446134037ff890bf502b79c2cf65267c1df689a9929c7fa80edcc6d7f9a19412b1fe35a556e05e8da2a90e65dce6dda126cf4ca77d8849f6e718954d5f9a3453086864a00a60124b4c2fe1566011823c18856af8e0a1df6f6c293286176ab77ef7bedd481569daf513006a2ce65ebb91762281aeaf4b0f742cce80abfdfdc9a3ce8528b837a388189e264a89db8fcf4d4c76bbd55086ff9b09fce01f5e70e3dea5ca9d7534e5bba801b21feca234615696862264b944b52503b2a17947da2773367f842e19fae9884c5a36da13318e31b2b4cc54857d3790fcc7a958f94f72af4702fe375a4f92434080b6b69e90a9d9f82ccce97015014742085108920988770ec6c51fb4a5f12cf6298a063f6177e32f8dade5fb9320bf26237e1fbf75407e809da60c2db9e7ed9b960e77881beaa1dc571445b9ddd580b00be4fa3bc4dd47ffaff4c000b37e5d65807c5affaa98907650ff404bca0228890107b5a470cbcbc93ab9147e37c770ae1bf1c753c8a1fd9fbaf753aff0049a38fa21efa176c707a24bdb3598bbfb157504e74a690667496e4991d167c3d416fe0820f960c1386471d60c1b2259afeefd1c986ab2b11a70bb21d0e395676b4b5ff3bb353fbedc06ed62b0c19cfb00acd8bfc70200a9e121c85a9bba21b7e59dd9e7ecdb62a81f0afdae34c365ae00b3b2b96d37976b48fca97c35ca458232e4262d22425266ee0c48269b502fcb8c946eaab4a7bd41c7e1b391e3c402c4f9cd0565d35484eaf1c1ad8e6d44fd9812999ad5d1d0479b477786bd36f7bb967085a1e25714fb46fbd9a945db4195c7ecd81af2391045527761a3ceaa04d9c46730965d0287b1fa11cbab0d9cd22ace01584f5758be18cd6c5e9f6e5464f05a64740f7c5500d6a5c45cf89e2c5f860b1edc7ef1e4d840e203f6fb13b555ba4f433380ee440ab71e75f1dea1943fa37ed557ce3ae5dff963ec5531f3d5265b7e03aea090a98d6ac89fe149c1dd2ac4e36f0217efae1d142e61fdb75a733b8d3208dd0b05d6612573921a00411dfb7e33eccc406d5c4b3f9d49b4e4d7c937f0ec229ce7f28e2ef83d50b9788a332fb44166898101d047009fe631cd7d720baf7ae16155cae114b3fbe9eb295192eba145a4d3b9ee6a31484d0341ecb916a1d45b540c41aa6fa605978bf72ccebef1d1136a469cd6aca614c189cccbe81d0b63a8bf9234f749d428792fd033dc518852cedfeb4d32221d360a31df9418b5398c53a653d294f12b4a9687172abb8a5c653eaed2b3e78635b2ed10ab841eccbc0aba12bb3148426086a885980448eb30d3e4da81d819839b31f61845084ac72a2bd76c139af27e4b6324cfb359004c807352ededd52333fb2df177b4c61b1ce0548d2c8f514b9f3ae1efa9c2f123d8d0ab262685cce9ebccd8220de51aac394e0b2372e4ab443efdda112aa1b5bede4d7eaa56c26e301bc7cdb6acbbf944802e34cfcb0cc24cfa3e8366701ae3e23d7948368a0ac9ad2ab6b325889f824e1a0bb992868235e770798c8d2dd2cca07134fd069a2ebbd33aa0fba929eeb48b83daca9f5a9aa56fafb0658d59a85c587ffbd3615dd795eaa9a6e69c703907d7d9e286b7e93b51e84657f7d7b52ff19831a3e8e19def111061a1726174205546b5effcfd266ddceeb0aaa82450899c01d03a9a6c3b577423deb73e46f61fccaa3a21555aefc52ba7f452487bfd1ad4f701680f652c85676f399c0695f13a97a7e0f3b5bedf5bd99abd4b14a2dacb877720261d7ed71226a4b0f2d0fb29e1631e860070932a3eac5019edc42e4976ebf2335fd5d2a336be1d9dc3005ee22e323d4b609e39dd0febbb0343519366b44accce22ba6dc2dbe288e1803186284086416398770118ba2055942a7f81157a37ba29e4a8373a09c7151eeb2266322dee1a861df009141b807a8dc17069aa71da7678ecaa03664a8f43f90c006e2d16ab7b866fac1c4b80d02b739a25f7c440898038b864b5c48d602d70bae8dcb455cacbdf5313fe6b6e533844d7ae141d49bf076429fa77f4f415a3a7e8980a622ea8c383fc8eaa5a1350e11fe8879930d19ad44222f7b90ac13762989897a8c0bfb143c7bf6b6c626398a4cf2751fa20c31830e44cdc6b8481cbd6290d768970da483ba11b895b16a253aa95bb0ebd820998605283f30af52223056df9d6495831081d88b79af38071ce71d060f7aee0a0060c3ec7f3996ce135e8dedcf0e02e43fdf860e6a9029caa31bdd4dc9a7816669c55ad9d31a1b2146cd52386788d60a6ed4569356811e22b9851c88d630a1af25a0779bc1eba55cca0bc848297eef25b799a5ac4c893d988dcff04b9814dcb574f64299c8a155134c2b6be1b332cfc17dc51f343e4ca30bc32bfee66f9e198a8b5b54eb06a723ce9ca664eec939df1e185900d09cee148ea9874a93f89f0109b9d1e1740314722e90413d15e3e564992b2c05367454e2e6ba7dec807a2a9c7b872147ea3bb063c0e835f43a035a5fbd96cc07fa37d8c15eaf9b6cb9dd6c3d5e9662c99abc70cf53856bba080a53446b39df4f05a45e61d1872723b6a65d080eeafa3d9850a04be752675030c5ea9ebc19fdeed9da4ad63fdab436de88334002a51cce86e8ab525ffd1e4f11bfb8e9163270815b8268fc96f78983385670844d7f518d9821cd4a0f376253a9c9a0e3e8214cd1d7de08f970b2c4c4bc7a187b9d54c16f8243f4bdba1d2c1396b46a52abb2692d074cd9c53db7b4159530374724223cafb696bc7e0b3fa2280e04bedf8cd9d1ebf321e1dc0bcac8aa48ef8f43ccfef1ac2cbaf3881e84f2a83b25f374fabd9a555769c6e203a2e74fe2a98222ca7ec7f1b0227a1464f0a43ee93f7defabf24a4b7625f22839474c413fc438dfa9b2395147191a96bc78ea3cc03a4016a483ffcef9081dc206e0f801e92c96aecaf242276f06bf74d64b2aa2c8a1c6a281eb52387fc4e61a3e3528602679fc4f89a0e325cb933c165e8d0a8d2e690958b029b3bdc2cff7111a11c50ba2045ea2b2f306b4dcd1eb7996b7a624dad9ae93fdae99ff19a86814aae4cd5ff1d46dd19b4630f23d0c23ad1c299d2a9efcfbeb92dc4351ab7a7dff44d41ce83551bf044c7c1190bfdf1f47b7caef68825e1dc62b1ff8990eea73936d622f474944b3311cc89cd5ecf415be7477f54d1f2121dbc0bbd772bdd2897130668f2fb7c1440678149b96106e9fc8c0701fe7c251d767f5460f7487d5b763aecc6f122e28176c54aa8bfb86d47b4b7f40a538983bdf779c7bc3844ecb23bc0bf9860d3136d23558f3433a75f79dff6aa459d28a85fcd9395314329377587f4d45c80cd160c3451d806bb81c4c19f752dd2ecedfcaee762a09b17a4e57809ca0184761b702f75d854019842f94d4e11684a9542b4b7890520c0199f07163eb7e69c0e57160ca379eef3458f0979da4eaab257e9a140ce212ea97d66592308cb44a4c06e7c482d562244e45c2d3c91c3808e5cdc734455bd0d1820e8e74b864644e231d54809af5c77ebb3978f80a67cd9e46891671659211898c3eb7f63136dd74ecc51a737bc6aba6edd233a4b47650d1d605b71b02ef125a20a2590c5874e707584f6f624b5278eedee1764d59353a6bc5a63a6008d1421790685a6849f3a7838ad966ef282ed6b68f4735e81c02a49a8f08f3f8ece5e3038e59d63542942aa76aabb5306cbdcaae9f41dbde21ff46aa9306aee5571d0f019b5089713f580ab39984d20631fd8e6aa00d58a8f66a35185c30c37801b03a7231f21cde5dd1e5d49fdc9a65accdf48a7b4a17c910d9d501bc8a87d61bf7487dfa311317c6fa46587ded5cb0aa2786b632a4df6fb7597eb9b81e2a6a009e0431fb0ac9f2b1cee269a096d1f27646eabb61416a51cf0ec8672e869abb90af9cc9d32f1597f8687a6be555630244942ebd2cd984feee89063e60a3c8d5d220e7914298247e2073ed48b73d8fb39ed5c6bf1be8562803a4592f9546564f7e67c71571d89c1dae53afac6fd793fd67e2b177274ad489f5a17e8ba19d8474a557323bb46655157580b3e3a818533d02c61dc0740e509da1d40719ec08f44951469c1cbe7ec62d0fe225d3f947f2c9cb3ad5393e899a1e42455731a63078ba083e22a062c8338b703a3a073d63a036df9c13f653f3d327a7ddfb88dad5b8c0751fddfe7995c7be1cb27fd2310711fbf0f8e317697a9f07dff64f0834e1ed84ee4b6dfecadd43f040deed007e58c1302c3406e541d2e9f137df91d4a5797eff71dfbbf39034d5be1373eba6203fd4bc4aabd881d8266eb700a120c4f6582836cc247131fd1b302af4de762bd9d0e52f809dc48ad1f6d52167c90bdc0cc84be681c36f9725563e475b8feb049d0af16bf4682a63c976bdc72f7dbf7f1e2b3ead181e6e8b159ba02e356fb66ec0439d2111aaf5e381753ea1c84477748a2c22652fc4bf7f91215c84cba379ba1e3c2eed0b273e1a2d703aa819b6bdb01161f9525b37f181772cff74a6ec28015bb20df341c81f0c8de1d104a628270f1de8a33886a14a293f4213050a3be88d373ffa31812e6cbf86f8bc4d0f7e5ce0babba51bb7eacd97d870ebd6311a6e85d4b8fdd8c3d38c335142402e82706c9e8df52063326f64b873c21a05d8b57725f1e6ccb643c781f7726d7e77e99f028263ebced5c2aa4e452e76ffb792f1c220faaed97893d7c76f585fa7b40fb6b7e41512e9ec89261eb399bdc4682db56640261825d592c0ec2b83bdd482b6edb1fa794a9ce3de3dcda49cd9a902f6cdba47477f07b3e7838ee4ebe9333900f2b85aaec3e205d2434067b1bb3768800af587f3f149ccfbdc601f98bcf5a16899c62dc778f120a1079024d60574cbd057d859896ec0efc9f6f10190cca46a27ee59e87e26540791d57eee07b6050b2621a189c8cfeb7966e91705a0efce0be674f0f8f0d097987a01c2a19b11db401fd60fd9ea1bfa2a5def52cd428fe821d7c7fadd7f49e7aa5e5a75d422aa48ec1a5fc232caf64890f76493243c767cb2cc2046b757da334f7faf9e24f83e15231b6203b41d9d35656940fb268a3a3ef6dd4a26f90b272410096c1b7362180efc77f49704e01edc45fcaa6bf01d12ab1620f78bc75f85d68846ed99ead8a59df6feb5858b4eed3101baa328eb954f6cd4b8b2e30fed3bfabb2a0fae36a76d461dee9f3af823674abce75412592b7104f4ae79fa9cd8624613076f6f90adf1dcb6ddbb4431c5dfee37a41b6d054397cc78b35b26eecdc184adc1decf8945b5affbac35eab9b6f02d665334a4625c350d9106d73e1ec4fcc880846ad55ddffcfb9ac040ead2b2d25a029267113c53e57d7d315d07404d5413d7d9571f400daa0982b9900b6ec9ecc5cce52e0cc07a2963aa7859e6d145f764ecc5d49cd4faddab2d0b55439c5df16f5b636e9ca022d4cc926a2112d506996ab3a1f9c4491221662968680ea0d1c1e2dd98c710d77aeebeaa0e6d45a69d3ef7bdbdec3b33a639594a5737f05c56eb4c649bdcc35a1d4acabb416685ccaf3f840bb87c5b42ff5a7c2b46209e56fa08a60bcb8d5b66f4e146c6aab1df592d065f04c0e5b8d2e6c2aa24d1e40f99a6911d81fbffb87d0a4a8894ceeead97695e401dafc9f95f5c9b05b5a1964887e6d2b7110e98f274bd61ee2ea3afac700d18b39b6313919872aa4d6e160969542f8db876c8c8b51574289dbe6063dd91952f1a693021f07cda2824a7cb9a5059347aa66298f51ec15c3b91144dd1406330ac0a87ec987cebbe619c40810833a75047eb97e98360ced3006d9e4d19976ad081346ee673d3f913b7cbf9d93b9f59e8559d610ca97978474d79981219313a0ea48ff629bc4e061383a355e25f299c495433b3bde857032256fb36fa9ed4cc32a1200674a46c628cfb92eeb673ecb80a8d2112a90c1617b361ad33912714aac828ec88a3fd38b0dfdf57b19dd23ad1588cabf7f9a8e35746f2ca237616e4c187da8c78747ff31b202aff974c80077333e896901be0f4a986e67e4e2299b379343c859dbf938e388d619633e4725eaab1d365e1abf048e24dd1cda98320961cd852713adf08ff2904cde9998fd97fef0023bf0290660f3bd9f0a24985dd35029a953d47f0a1a1e82043206712c210c7b195764dbb79a6e5259375f987c1a654905395e744c63e12f59e6712f882a71901c4d4154767d1ca76639c9a028430a67b967aa707a3dcabd44cc41062b8cde1721ec72b20f345d9a2cc8af092e67b77ecfff2155932949fddcb1ca6354d27a6b7c7249599dc7a1c58d49422ab0a69371784a08e7c20104037fa56c03659e8588057dc92e80d00c6dd0823378fbc5f055a2737dd94ac399245091c7dd90ca7e21ddae0d73673a7f735ebe627aa3d1a190941e5e951f119554fc2b3feb6cf1786e23eb3cd38215ff0fcea25f0d51a4856a8836cb33accc2154ab766f48405edfcd43c3a171d066959056a75e7c4540eacb99c29ed8b171af9f4d6929e0ff06f0d08cedcb7f717bbb63175e319e67bcaa60236dc31edbfe626ab61761d05c5c8dd106ddc7caaed3d13b750e95d0b173ef5e4cd8cc33979360ec092e7daf9ab242a85122514e995cca74029446b6e4c854f08ceeeef5e772c2657589cb58558544f6d8584d34cb87d9de760eb24b2f21164c6c8ffc9e09ebe5c2cc</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>史记</category>
      </categories>
      <tags>
        <tag>史记</tag>
        <tag>历史</tag>
      </tags>
  </entry>
  <entry>
    <title>VectorCDC论文浅读</title>
    <url>/2025/02/23/vectorcdc/</url>
    <content><![CDATA[<p>……</p>
<span id="more"></span>

<p>VectorCDC<a href="#VectorCDC">[1]</a>是存储顶会FAST’25的论文，主要改进和优化了重复数据删除中的hashless Content-Defined Chunking（CDC）算法。因为我最近在做一些CDC相关的研究和工作，所以对这篇论文很感兴趣，这里记录一下我对这篇论文的理解、总结和思考。因本人水平有限，如有错误，欢迎指正。</p>
<h1 id="背景和相关知识"><a href="#背景和相关知识" class="headerlink" title="背景和相关知识"></a>背景和相关知识</h1><h2 id="数据重删阶段"><a href="#数据重删阶段" class="headerlink" title="数据重删阶段"></a>数据重删阶段</h2><p>数据重删（Data deduplication）一般来讲分为以下几个阶段：</p>
<ol>
<li>Data Chunking，数据分块，将数据分割成固定大小的块，范围一般在1-64KB之间。</li>
<li>Chunk Hashing and Comparison，分割完数据后，对每个块进行hash计算，然后比较hash值，找出重复块。这里的hash值一般使用SHA或者MD5等hash（collision-resistant）算法计算。</li>
<li>Metadata Creation，对于重复的块，只保留一个副本，其他的块只保留元数据信息（recipe），指向重复块的位置。</li>
<li>Metadata and Chunk Storage，将元数据和块存储到存储介质中。</li>
</ol>
<p>这四个阶段是VectorCDC文章中提到的，其他文章中对这些阶段的提法也都大差不差。数据重删最重要的是重删率，VectorCDC中用space savings来衡量重删率，space savings定义为：<br><img data-src="https://zzh-blog-data.oss-cn-hangzhou.aliyuncs.com/img/20250226145657299.png" alt="space_savings"></p>
<p>即重删之前的数据大小和重删之后的数据大小的比值。重删率越高，space savings越大。</p>
<h2 id="数据分块"><a href="#数据分块" class="headerlink" title="数据分块"></a>数据分块</h2><p>数据分块是重删过程中计算开销最大（most compute-intensive phases）的一个阶段。一般来讲目前的重删系统都使用变长分块算法即CDC算法，固定分块（Fixed-size chunking）算法不怎么用，因为它不能抵抗boundary shift，即数据的插入、删除、更新等操作会导致数据的分块发生变化，从而影响重删率。而CDC算法可以根据数据的内容来分块，因此更加灵活。</p>
<p>CDC算法又分为hash-based CDC和hashless CDC两种，hash-based算法就是对数据流逐字节滑动一个固定大小的窗口，然后计算窗口内的数据的hash值，如果hash值和一个预先定义的值匹配（target mask），那就插入一个chunk boundary。这里的hash算法使用的是rolling hash算法，比如较著名的Rabin fingerprint算法和Gear算法<a href="#Ddelta">[2]</a>，如下图。<br><img data-src="https://zzh-blog-data.oss-cn-hangzhou.aliyuncs.com/img/20250226150518378.png" alt="Rabin and Gear"></p>
<p>hashless CDC算法则是不使用hash算法，而是利用局部极小值/极大值来插入分块边界，这样可以减少hash计算的开销，但可能会导致更低的重删率。VectorCDC就是一种hashless CDC算法。</p>
<h2 id="使用AVX优化CDC算法"><a href="#使用AVX优化CDC算法" class="headerlink" title="使用AVX优化CDC算法"></a>使用AVX优化CDC算法</h2><p>SS-CDC<a href="#SS-CDC">[3]</a>使用AVX-512 instructions优化hash-based CDC算法，简单来说是把chunking阶段再分为rolling hash和boundary detection两个阶段，rolling hash阶段只用来找potential boundary candidates，但是可以并行；然后boundary detection阶段再连续地对candidates进行过滤，找到real boundaries。两个阶段都可以使用AVX-512 instructions来加速。</p>
<p>但是一些基于hash-based CDC算法的优化例如minimum chunk-size skipping就不能在SS-CDC中使用。Minimum chunk-size skipping是指每次找到一个chunk boundary后，就跳过一部分字节，然后继续找下一个chunk boundary，这样可以减少hash计算的开销。SS-CDC不能用这个优化的原因是因为SS-CDC的rolling hash阶段只是用来找potential boundary candidates，而不是real boundaries，所以不能直接跳过这部分字节。但是SS-CDC的第二个阶段可以跳过在这些字节范围内的potential boundary candidates。</p>
<p>另外，SS-CDC使用大量的AVX scatter/gather instructions，这些指令在处理不规则的内存访问时会有很大的性能开销，所以SS-CDC的性能并不是很好。从下面的吞吐量测试图中可以看到用SS-CDC的吞吐量并没有提高太多，这里面CRC的rolling过程和Rabin类似。</p>
<p><img data-src="https://zzh-blog-data.oss-cn-hangzhou.aliyuncs.com/img/20250226152928584.png" alt="SS-CDC speedups"></p>
<p>经过一番分析，VectorCDC决定使用AVX instructions来优化hashless CDC算法。</p>
<p><strong>个人思考</strong>：VectorCDC对SS-CDC的分析很准确。此外，SS-CDC在它的两个阶段内使用BitArray来记录potential boundary candidates，对较大的数据集来说，BitArray的内存开销会很大，且第二个阶段还要连续地扫描BitArray，这样可能会降低性能。</p>
<h1 id="VectorCDC算法"><a href="#VectorCDC算法" class="headerlink" title="VectorCDC算法"></a>VectorCDC算法</h1><p>Hashless CDC算法也要滑动一个窗口，然后根据这个窗口的位置找局部极小值/极大值来插入分块边界。VectorCDC的主要改进是使用AVX instructions来加速这个过程。</p>
<p>下图是Asymmetric Extremum (AE)<a href="#AE">[4]</a>算法的示例，简单来说是逐字节滑动一个固定大小的窗口，如果这个窗口前一个字节（位置为P）的值大于区间<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="21.677ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 9581.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(892,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1343,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1809,0)"><path data-c="5F" d="M0 -62V-25H499V-62H0Z"></path></g><g data-mml-node="mi" transform="translate(2309,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(2738,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(3223,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3795,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4395,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(4915,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(5444,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5895,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(6385,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(6829.7,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(7802.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(8803.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(9303.1,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container>内所有字节的值，且不小于窗口内所有字节的值，那么就说P是一个极大值，反之亦然。这样就可以找到极大值或极小值，然后在窗口的最后一个字节处插入分块边界。</p>
<p><img data-src="https://zzh-blog-data.oss-cn-hangzhou.aliyuncs.com/img/20250226154338191.png" alt="AE"></p>
<p>Rapid Asymmetric Maximum Algorithm (RAM)<a href="#RAM">[5]</a>的判定标准又和AE不同。下图是RAM算法的示例，RAM先在<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="17.463ex" height="2.034ex" role="img" focusable="false" viewBox="0 -694 7718.4 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(954,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1420,0)"><path data-c="5F" d="M0 -62V-25H499V-62H0Z"></path></g><g data-mml-node="mi" transform="translate(1920,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(2349,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(2834,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3406,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4006,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(4526,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(5055,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5506,0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(6218.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(7218.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container>的位置上固定一个窗口，将这个窗口内的最大值扫描出来。然后从这个窗口下一个字节开始，找到一个大于窗口内最大值的字节，并在这个字节的位置插入分块边界。</p>
<p><img data-src="https://zzh-blog-data.oss-cn-hangzhou.aliyuncs.com/img/20250226161310535.png" alt="RAM"></p>
<p>VectorCDC将hashless算法的过程分为两个阶段Extreme Byte Search（EBS）和Range Scan（RS），并对每一个阶段使用AVX instructions来加速。</p>
<h2 id="Extreme-Byte-Search"><a href="#Extreme-Byte-Search" class="headerlink" title="Extreme Byte Search"></a>Extreme Byte Search</h2><p>对于EBS阶段，VectorCDC设计了Tree-based Search方法来找到窗口内的最大值。如下图所示，第一步将所有字节打包（packed）加载入AVX-compatible m512i variables中，一个m512i variable可以载入连续的64个字节。</p>
<p>第二步使用vector mm512_max instructions找到两个m512i variables之间的最大值，然后将这些最大值再载入一个m512i variable中。之后重复这个过程，直到到达这个搜索树的根节点，再对这个根节点的m512i variable进行扫描，找到拥有最大值的字节。</p>
<p><img data-src="https://zzh-blog-data.oss-cn-hangzhou.aliyuncs.com/img/20250226163518851.png" alt="Accelerating Extreme Byte Search"></p>
<h2 id="Range-Scan"><a href="#Range-Scan" class="headerlink" title="Range Scan"></a>Range Scan</h2><p>对于RS阶段，VectorCDC设计了Packed Scanning方法。如下图所示，将最大值载入一个m512i variable中，然后将要扫描区域的64个连续字节打包载入一个m512i variable中，然后使用mm512_cmpge instructions来比较这两个m512i variables，生成一个64-bit mask。</p>
<p>如果mask为0，说明这64个字节中没有大于最大值的字节，需要继续扫描下一个64个字节；如果mask不为0，说明这64个字节中有大于最大值的字节，那么就在这64个字节中找，然后插入分块边界。这个过程不影响minimum chunk-size skipping优化。</p>
<p><img data-src="https://zzh-blog-data.oss-cn-hangzhou.aliyuncs.com/img/20250226165749382.png" alt="Packed Scanning"></p>
<h2 id="对AE和RAM优化"><a href="#对AE和RAM优化" class="headerlink" title="对AE和RAM优化"></a>对AE和RAM优化</h2><p>对RAM的优化很简单，VectorCDC的EBS代替RAM在固定窗口中找最大值的过程，RS代替RAM在窗口外找大于最大值的字节的过程。</p>
<p><img data-src="https://zzh-blog-data.oss-cn-hangzhou.aliyuncs.com/img/20250226171041345.png" alt="RAM优化"></p>
<p>对AE的优化稍显复杂，因为它的固定窗口在找chunk boundary的过程中会不断地滑动，所以VectorCDC的RS阶段要不停地进行以更新最大值，而且每一个RS阶段之后都要进行一次EBS阶段。</p>
<p><img data-src="https://zzh-blog-data.oss-cn-hangzhou.aliyuncs.com/img/20250226171116197.png" alt="AE优化"></p>
<p><strong>个人思考</strong>：VectorCDC的优化思路很清晰也不复杂，做到了simple but effective。</p>
<p>此外，唯一的问题是对AE的优化没有那么直接，在只读了论文还没有看VectorCDC源码的情况下，我看到AE要进行多轮RS和EBS，这毫无疑问会增加一些开销，在后文的测试中也看到对AE的优化效果并不是很好。</p>
<p>原始的AE需要两个变量分别记录固定窗口内和窗口之前的极值，在滑动的时候只需要将新的字节和这两个变量比较。因此我觉得对于AE应该还有一些优化的空间。VectorCDC可能碍于文章页数的限制，没有详细介绍AE的优化过程。</p>
<h1 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h1><p>实验结果主要是对VectorCDC和其他CDC算法的重删率和吞吐量进行对比。下图是重删率的比较，可以看到hashless CDC算法（AE和RAM）的重删率在四个数据集下都比hash-based CDC算法低，即space savings更低。此外使用vector指令之后不影响重删率。</p>
<p><img data-src="https://zzh-blog-data.oss-cn-hangzhou.aliyuncs.com/img/20250226172826977.png" alt="space savings"></p>
<p>然后下图是吞吐量的比较，使用VectorCDC优化的VRAM吞吐量要高得多，提升很大。</p>
<p><img data-src="https://zzh-blog-data.oss-cn-hangzhou.aliyuncs.com/img/20250226173909855.png" alt="Throughput1"></p>
<p>下图是分别使用AVX-256和SSE-128 instructions的吞吐量对比，可以看到使用AVX-256 instructions的吞吐量更高，同时使用VectorCDC优化的AE吞吐量并不是很高，其中原因已在前文提到。</p>
<p><img data-src="https://zzh-blog-data.oss-cn-hangzhou.aliyuncs.com/img/20250226174043648.png" alt="Throughput2"></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>VectorCDC利用Vector指令加速hashless CDC算法，主要优化了Extreme Byte Search和Range Scan阶段。VectorCDC的优化思路很清晰，实验结果也很好。这是VectorCDC的开源仓库：<a href="https://github.com/UWASL/dedup-bench">VectorCDC</a>。</p>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a name="VectorCDC"></a><br>[1] <a href="https://www.usenix.org/conference/fast25/presentation/udayashankar">VectorCDC: A Vectorized Content-Defined Chunking Algorithm for Data Deduplication</a>.<br><a name="Ddelta"></a><br>[2] <a href="https://www.sciencedirect.com/science/article/pii/S0166531614000790">Ddelta: A deduplication-inspired fast delta compression approach</a>.<br><a name="SS-CDC"></a><br>[3] <a href="https://dl.acm.org/doi/10.1145/3319647.3325834">SS-CDC: a two-stage parallel content-defined chunking for deduplicating backup storage</a>.<br><a name="AE"></a><br>[4] <a href="https://dl.acm.org/doi/10.1109/TC.2016.2595565">A Fast Asymmetric Extremum Content Defined Chunking Algorithm for Data Deduplication in Backup Storage Systems</a>.<br><a name="RAM"></a><br>[5] <a href="https://dl.acm.org/doi/10.1016/j.future.2017.02.013">A new content-defined chunking algorithm for data deduplication in cloud storage</a>.</p>
]]></content>
      <categories>
        <category>Paper</category>
      </categories>
      <tags>
        <tag>Paper</tag>
        <tag>Deduplication</tag>
      </tags>
  </entry>
</search>
